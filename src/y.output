   0  $accept : programa $end

   1  programa : bloquePrograma

   2  bloquePrograma : bloquePrograma sentenciaDeclarativa
   3                 | bloquePrograma sentenciaEjecutables
   4                 | sentenciaDeclarativa
   5                 | sentenciaEjecutables

   6  sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' NS '=' constante bloqueSentencias

   7  sentenciaEjecutables : sentenciaIf
   8                       | asignacion
   9                       | cicloFor
  10                       | OUT '(' CADENA ')'
  11                       | identificador '(' listaParametros ')'

  12  listaParametros : listaParametros ',' identificador
  13                  | identificador

  14  bloqueSentencias : '{' listaSentencias '}'

  15  listaSentencias : listaSentencias asignacion
  16                  | listaSentencias cicloFor
  17                  | listaSentencias sentenciaIf
  18                  | sentenciaIf
  19                  | cicloFor
  20                  | asignacion

  21  sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias ELSE bloqueSentencias END_IF
  22              | IF '(' condicion ')' THEN bloqueSentencias END_IF

  23  cicloFor : FOR '(' condicionFor ')' bloqueSentencias

  24  condicionFor : inicioFor ';' comparacionFor ';' incDecFor identificador

  25  inicioFor : identificador '=' constante

  26  comparacionFor : identificador comparador identificador

  27  incDecFor : UP
  28            | DOWN

  29  condicion : expresion comparador expresion
  30            | error expresion
  31            | expresion error

  32  comparador : "<="
  33             | ">="
  34             | '<'
  35             | '>'
  36             | "!="
  37             | "=="

  38  asignacion : identificador '=' expresion ';'
  39             | identificador error expresion

  40  expresion : expresion '+' termino
  41            | expresion '-' termino
  42            | termino

  43  termino : termino '*' factor
  44          | termino '/' factor
  45          | factor

  46  factor : constante
  47         | identificador

  48  identificador : ID

  49  constante : CTE
  50            | '-' CTE

state 0
	$accept : . programa $end  (0)

	ID  shift 1
	IF  shift 2
	OUT  shift 3
	FOR  shift 4
	PROC  shift 5
	.  error

	programa  goto 6
	bloquePrograma  goto 7
	sentenciaDeclarativa  goto 8
	sentenciaEjecutables  goto 9
	sentenciaIf  goto 10
	asignacion  goto 11
	cicloFor  goto 12
	identificador  goto 13


state 1
	identificador : ID .  (48)

	.  reduce 48


state 2
	sentenciaIf : IF . '(' condicion ')' THEN bloqueSentencias ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF . '(' condicion ')' THEN bloqueSentencias END_IF  (22)

	'('  shift 14
	.  error


state 3
	sentenciaEjecutables : OUT . '(' CADENA ')'  (10)

	'('  shift 15
	.  error


state 4
	cicloFor : FOR . '(' condicionFor ')' bloqueSentencias  (23)

	'('  shift 16
	.  error


state 5
	sentenciaDeclarativa : PROC . ID '(' listaParametros ')' NA '=' constante ',' NS '=' constante bloqueSentencias  (6)

	ID  shift 17
	.  error


state 6
	$accept : programa . $end  (0)

	$end  accept


state 7
	programa : bloquePrograma .  (1)
	bloquePrograma : bloquePrograma . sentenciaDeclarativa  (2)
	bloquePrograma : bloquePrograma . sentenciaEjecutables  (3)

	ID  shift 1
	IF  shift 2
	OUT  shift 3
	FOR  shift 4
	PROC  shift 5
	$end  reduce 1

	sentenciaDeclarativa  goto 18
	sentenciaEjecutables  goto 19
	sentenciaIf  goto 10
	asignacion  goto 11
	cicloFor  goto 12
	identificador  goto 13


state 8
	bloquePrograma : sentenciaDeclarativa .  (4)

	.  reduce 4


state 9
	bloquePrograma : sentenciaEjecutables .  (5)

	.  reduce 5


state 10
	sentenciaEjecutables : sentenciaIf .  (7)

	.  reduce 7


state 11
	sentenciaEjecutables : asignacion .  (8)

	.  reduce 8


state 12
	sentenciaEjecutables : cicloFor .  (9)

	.  reduce 9


state 13
	sentenciaEjecutables : identificador . '(' listaParametros ')'  (11)
	asignacion : identificador . '=' expresion ';'  (38)
	asignacion : identificador . error expresion  (39)

	error  shift 20
	'('  shift 21
	'='  shift 22
	.  error


state 14
	sentenciaIf : IF '(' . condicion ')' THEN bloqueSentencias ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF '(' . condicion ')' THEN bloqueSentencias END_IF  (22)

	error  shift 23
	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	condicion  goto 28
	expresion  goto 29
	termino  goto 30
	factor  goto 31


state 15
	sentenciaEjecutables : OUT '(' . CADENA ')'  (10)

	CADENA  shift 32
	.  error


state 16
	cicloFor : FOR '(' . condicionFor ')' bloqueSentencias  (23)

	ID  shift 1
	.  error

	identificador  goto 33
	condicionFor  goto 34
	inicioFor  goto 35


state 17
	sentenciaDeclarativa : PROC ID . '(' listaParametros ')' NA '=' constante ',' NS '=' constante bloqueSentencias  (6)

	'('  shift 36
	.  error


state 18
	bloquePrograma : bloquePrograma sentenciaDeclarativa .  (2)

	.  reduce 2


state 19
	bloquePrograma : bloquePrograma sentenciaEjecutables .  (3)

	.  reduce 3


state 20
	asignacion : identificador error . expresion  (39)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	expresion  goto 37
	termino  goto 30
	factor  goto 31


state 21
	sentenciaEjecutables : identificador '(' . listaParametros ')'  (11)

	ID  shift 1
	.  error

	listaParametros  goto 38
	identificador  goto 39


state 22
	asignacion : identificador '=' . expresion ';'  (38)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	expresion  goto 40
	termino  goto 30
	factor  goto 31


state 23
	condicion : error . expresion  (30)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	expresion  goto 41
	termino  goto 30
	factor  goto 31


state 24
	constante : CTE .  (49)

	.  reduce 49


state 25
	constante : '-' . CTE  (50)

	CTE  shift 42
	.  error


state 26
	factor : constante .  (46)

	.  reduce 46


state 27
	factor : identificador .  (47)

	.  reduce 47


state 28
	sentenciaIf : IF '(' condicion . ')' THEN bloqueSentencias ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF '(' condicion . ')' THEN bloqueSentencias END_IF  (22)

	')'  shift 43
	.  error


state 29
	condicion : expresion . comparador expresion  (29)
	condicion : expresion . error  (31)
	expresion : expresion . '+' termino  (40)
	expresion : expresion . '-' termino  (41)

	error  shift 44
	"<="  shift 45
	">="  shift 46
	"!="  shift 47
	"=="  shift 48
	'+'  shift 49
	'-'  shift 50
	'<'  shift 51
	'>'  shift 52
	.  error

	comparador  goto 53


state 30
	expresion : termino .  (42)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 54
	'/'  shift 55
	$end  reduce 42
	error  reduce 42
	ID  reduce 42
	IF  reduce 42
	OUT  reduce 42
	FOR  reduce 42
	PROC  reduce 42
	"<="  reduce 42
	">="  reduce 42
	"!="  reduce 42
	"=="  reduce 42
	'+'  reduce 42
	'-'  reduce 42
	')'  reduce 42
	'}'  reduce 42
	';'  reduce 42
	'<'  reduce 42
	'>'  reduce 42


state 31
	termino : factor .  (45)

	.  reduce 45


state 32
	sentenciaEjecutables : OUT '(' CADENA . ')'  (10)

	')'  shift 56
	.  error


state 33
	inicioFor : identificador . '=' constante  (25)

	'='  shift 57
	.  error


state 34
	cicloFor : FOR '(' condicionFor . ')' bloqueSentencias  (23)

	')'  shift 58
	.  error


state 35
	condicionFor : inicioFor . ';' comparacionFor ';' incDecFor identificador  (24)

	';'  shift 59
	.  error


state 36
	sentenciaDeclarativa : PROC ID '(' . listaParametros ')' NA '=' constante ',' NS '=' constante bloqueSentencias  (6)

	ID  shift 1
	.  error

	listaParametros  goto 60
	identificador  goto 39


state 37
	asignacion : identificador error expresion .  (39)
	expresion : expresion . '+' termino  (40)
	expresion : expresion . '-' termino  (41)

	'+'  shift 49
	'-'  shift 50
	$end  reduce 39
	ID  reduce 39
	IF  reduce 39
	OUT  reduce 39
	FOR  reduce 39
	PROC  reduce 39
	'}'  reduce 39


state 38
	sentenciaEjecutables : identificador '(' listaParametros . ')'  (11)
	listaParametros : listaParametros . ',' identificador  (12)

	')'  shift 61
	','  shift 62
	.  error


state 39
	listaParametros : identificador .  (13)

	.  reduce 13


state 40
	asignacion : identificador '=' expresion . ';'  (38)
	expresion : expresion . '+' termino  (40)
	expresion : expresion . '-' termino  (41)

	'+'  shift 49
	'-'  shift 50
	';'  shift 63
	.  error


state 41
	condicion : error expresion .  (30)
	expresion : expresion . '+' termino  (40)
	expresion : expresion . '-' termino  (41)

	'+'  shift 49
	'-'  shift 50
	')'  reduce 30


state 42
	constante : '-' CTE .  (50)

	.  reduce 50


state 43
	sentenciaIf : IF '(' condicion ')' . THEN bloqueSentencias ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF '(' condicion ')' . THEN bloqueSentencias END_IF  (22)

	THEN  shift 64
	.  error


state 44
	condicion : expresion error .  (31)

	.  reduce 31


state 45
	comparador : "<=" .  (32)

	.  reduce 32


state 46
	comparador : ">=" .  (33)

	.  reduce 33


state 47
	comparador : "!=" .  (36)

	.  reduce 36


state 48
	comparador : "==" .  (37)

	.  reduce 37


state 49
	expresion : expresion '+' . termino  (40)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	termino  goto 65
	factor  goto 31


state 50
	expresion : expresion '-' . termino  (41)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	termino  goto 66
	factor  goto 31


state 51
	comparador : '<' .  (34)

	.  reduce 34


state 52
	comparador : '>' .  (35)

	.  reduce 35


state 53
	condicion : expresion comparador . expresion  (29)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	expresion  goto 67
	termino  goto 30
	factor  goto 31


state 54
	termino : termino '*' . factor  (43)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	factor  goto 68


state 55
	termino : termino '/' . factor  (44)

	CTE  shift 24
	ID  shift 1
	'-'  shift 25
	.  error

	constante  goto 26
	identificador  goto 27
	factor  goto 69


state 56
	sentenciaEjecutables : OUT '(' CADENA ')' .  (10)

	.  reduce 10


state 57
	inicioFor : identificador '=' . constante  (25)

	CTE  shift 24
	'-'  shift 25
	.  error

	constante  goto 70


state 58
	cicloFor : FOR '(' condicionFor ')' . bloqueSentencias  (23)

	'{'  shift 71
	.  error

	bloqueSentencias  goto 72


state 59
	condicionFor : inicioFor ';' . comparacionFor ';' incDecFor identificador  (24)

	ID  shift 1
	.  error

	identificador  goto 73
	comparacionFor  goto 74


state 60
	sentenciaDeclarativa : PROC ID '(' listaParametros . ')' NA '=' constante ',' NS '=' constante bloqueSentencias  (6)
	listaParametros : listaParametros . ',' identificador  (12)

	')'  shift 75
	','  shift 62
	.  error


state 61
	sentenciaEjecutables : identificador '(' listaParametros ')' .  (11)

	.  reduce 11


state 62
	listaParametros : listaParametros ',' . identificador  (12)

	ID  shift 1
	.  error

	identificador  goto 76


state 63
	asignacion : identificador '=' expresion ';' .  (38)

	.  reduce 38


state 64
	sentenciaIf : IF '(' condicion ')' THEN . bloqueSentencias ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF '(' condicion ')' THEN . bloqueSentencias END_IF  (22)

	'{'  shift 71
	.  error

	bloqueSentencias  goto 77


state 65
	expresion : expresion '+' termino .  (40)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 54
	'/'  shift 55
	$end  reduce 40
	error  reduce 40
	ID  reduce 40
	IF  reduce 40
	OUT  reduce 40
	FOR  reduce 40
	PROC  reduce 40
	"<="  reduce 40
	">="  reduce 40
	"!="  reduce 40
	"=="  reduce 40
	'+'  reduce 40
	'-'  reduce 40
	')'  reduce 40
	'}'  reduce 40
	';'  reduce 40
	'<'  reduce 40
	'>'  reduce 40


state 66
	expresion : expresion '-' termino .  (41)
	termino : termino . '*' factor  (43)
	termino : termino . '/' factor  (44)

	'*'  shift 54
	'/'  shift 55
	$end  reduce 41
	error  reduce 41
	ID  reduce 41
	IF  reduce 41
	OUT  reduce 41
	FOR  reduce 41
	PROC  reduce 41
	"<="  reduce 41
	">="  reduce 41
	"!="  reduce 41
	"=="  reduce 41
	'+'  reduce 41
	'-'  reduce 41
	')'  reduce 41
	'}'  reduce 41
	';'  reduce 41
	'<'  reduce 41
	'>'  reduce 41


state 67
	condicion : expresion comparador expresion .  (29)
	expresion : expresion . '+' termino  (40)
	expresion : expresion . '-' termino  (41)

	'+'  shift 49
	'-'  shift 50
	')'  reduce 29


state 68
	termino : termino '*' factor .  (43)

	.  reduce 43


state 69
	termino : termino '/' factor .  (44)

	.  reduce 44


state 70
	inicioFor : identificador '=' constante .  (25)

	.  reduce 25


state 71
	bloqueSentencias : '{' . listaSentencias '}'  (14)

	ID  shift 1
	IF  shift 2
	FOR  shift 4
	.  error

	sentenciaIf  goto 78
	asignacion  goto 79
	cicloFor  goto 80
	identificador  goto 81
	listaSentencias  goto 82


state 72
	cicloFor : FOR '(' condicionFor ')' bloqueSentencias .  (23)

	.  reduce 23


state 73
	comparacionFor : identificador . comparador identificador  (26)

	"<="  shift 45
	">="  shift 46
	"!="  shift 47
	"=="  shift 48
	'<'  shift 51
	'>'  shift 52
	.  error

	comparador  goto 83


state 74
	condicionFor : inicioFor ';' comparacionFor . ';' incDecFor identificador  (24)

	';'  shift 84
	.  error


state 75
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' . NA '=' constante ',' NS '=' constante bloqueSentencias  (6)

	NA  shift 85
	.  error


state 76
	listaParametros : listaParametros ',' identificador .  (12)

	.  reduce 12


state 77
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias . ELSE bloqueSentencias END_IF  (21)
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias . END_IF  (22)

	ELSE  shift 86
	END_IF  shift 87
	.  error


state 78
	listaSentencias : sentenciaIf .  (18)

	.  reduce 18


state 79
	listaSentencias : asignacion .  (20)

	.  reduce 20


state 80
	listaSentencias : cicloFor .  (19)

	.  reduce 19


state 81
	asignacion : identificador . '=' expresion ';'  (38)
	asignacion : identificador . error expresion  (39)

	error  shift 20
	'='  shift 22
	.  error


state 82
	bloqueSentencias : '{' listaSentencias . '}'  (14)
	listaSentencias : listaSentencias . asignacion  (15)
	listaSentencias : listaSentencias . cicloFor  (16)
	listaSentencias : listaSentencias . sentenciaIf  (17)

	ID  shift 1
	IF  shift 2
	FOR  shift 4
	'}'  shift 88
	.  error

	sentenciaIf  goto 89
	asignacion  goto 90
	cicloFor  goto 91
	identificador  goto 81


state 83
	comparacionFor : identificador comparador . identificador  (26)

	ID  shift 1
	.  error

	identificador  goto 92


state 84
	condicionFor : inicioFor ';' comparacionFor ';' . incDecFor identificador  (24)

	UP  shift 93
	DOWN  shift 94
	.  error

	incDecFor  goto 95


state 85
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA . '=' constante ',' NS '=' constante bloqueSentencias  (6)

	'='  shift 96
	.  error


state 86
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias ELSE . bloqueSentencias END_IF  (21)

	'{'  shift 71
	.  error

	bloqueSentencias  goto 97


state 87
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias END_IF .  (22)

	.  reduce 22


state 88
	bloqueSentencias : '{' listaSentencias '}' .  (14)

	.  reduce 14


state 89
	listaSentencias : listaSentencias sentenciaIf .  (17)

	.  reduce 17


state 90
	listaSentencias : listaSentencias asignacion .  (15)

	.  reduce 15


state 91
	listaSentencias : listaSentencias cicloFor .  (16)

	.  reduce 16


state 92
	comparacionFor : identificador comparador identificador .  (26)

	.  reduce 26


state 93
	incDecFor : UP .  (27)

	.  reduce 27


state 94
	incDecFor : DOWN .  (28)

	.  reduce 28


state 95
	condicionFor : inicioFor ';' comparacionFor ';' incDecFor . identificador  (24)

	ID  shift 1
	.  error

	identificador  goto 98


state 96
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' . constante ',' NS '=' constante bloqueSentencias  (6)

	CTE  shift 24
	'-'  shift 25
	.  error

	constante  goto 99


state 97
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias ELSE bloqueSentencias . END_IF  (21)

	END_IF  shift 100
	.  error


state 98
	condicionFor : inicioFor ';' comparacionFor ';' incDecFor identificador .  (24)

	.  reduce 24


state 99
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante . ',' NS '=' constante bloqueSentencias  (6)

	','  shift 101
	.  error


state 100
	sentenciaIf : IF '(' condicion ')' THEN bloqueSentencias ELSE bloqueSentencias END_IF .  (21)

	.  reduce 21


state 101
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' . NS '=' constante bloqueSentencias  (6)

	NS  shift 102
	.  error


state 102
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' NS . '=' constante bloqueSentencias  (6)

	'='  shift 103
	.  error


state 103
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' NS '=' . constante bloqueSentencias  (6)

	CTE  shift 24
	'-'  shift 25
	.  error

	constante  goto 104


state 104
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' NS '=' constante . bloqueSentencias  (6)

	'{'  shift 71
	.  error

	bloqueSentencias  goto 105


state 105
	sentenciaDeclarativa : PROC ID '(' listaParametros ')' NA '=' constante ',' NS '=' constante bloqueSentencias .  (6)

	.  reduce 6


37 terminals, 22 nonterminals
51 grammar rules, 106 states
