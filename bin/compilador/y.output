   0  $accept : programa $end

   1  programa : bloquePrograma

   2  bloquePrograma : bloquePrograma sentenciaDeclarativa
   3                 | bloquePrograma sentenciaEjecutable
   4                 | sentenciaDeclarativa
   5                 | sentenciaEjecutable

   6  sentenciaDeclarativa : tipo listaVariables ';'
   7                       | declaracionProcedimiento
   8                       | error listaVariables ';'

   9  listaVariables : listaVariables ',' identificador
  10                 | identificador
  11                 | error

  12  declaracionProcedimiento : encabezadoProc bloqueProc

  13  encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo ',' NS '=' tipo
  14                 | PROC identificador '(' ')' NA '=' tipo ',' NS '=' tipo
  15                 | PROC identificador '(' error ')' NA '=' tipo ',' NS '=' tipo

  16  parametrosProc : parametro
  17                 | parametro ',' parametro
  18                 | parametro ',' parametro ',' parametro

  19  parametro : tipo identificador
  20            | error identificador

  21  bloqueProc : '{' bloque '}'
  22             | '{' error '}'

  23  bloque : bloque sentenciaDeclarativa
  24         | bloque sentenciaEjecutable
  25         | sentenciaDeclarativa
  26         | sentenciaEjecutable

  27  sentenciaEjecutable : asignacion
  28                      | OUT '(' CADENA ')' ';'
  29                      | identificador '(' parametrosProc ')' ';'
  30                      | identificador '(' ')' ';'
  31                      | IF cuerpoIf END_IF
  32                      | cicloFor
  33                      | OUT '(' error ')' ';'
  34                      | IF error END_IF

  35  cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}'
  36           | FOR '(' error ')' '{' bloqueSentencia '}'
  37           | FOR '(' condicionFor ')' '{' error '}'

  38  condicionFor : inicioFor ';' condicion ';' incDec

  39  inicioFor : identificador '=' constante

  40  condicion : identificador comparador asignacion
  41            | identificador comparador identificador
  42            | identificador comparador constante

  43  incDec : UP constante
  44         | DOWN constante

  45  bloqueSentencia : bloqueSentencia sentenciaEjecutable
  46                  | sentenciaEjecutable

  47  cuerpoIf : cuerpoCompleto
  48           | cuerpoIncompleto

  49  cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'
  50                 | '(' error ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'
  51                 | '(' condicion ')' '{' error '}' ELSE '{' bloqueSentencia '}'

  52  cuerpoIncompleto : '(' condicion ')' '{' bloqueSentencia '}'
  53                   | '(' error ')' '{' bloqueSentencia '}'
  54                   | '(' condicion ')' '{' error '}'

  55  asignacion : identificador '=' expresion ';'

  56  expresion : expresion '+' termino
  57            | expresion '-' termino
  58            | termino

  59  termino : termino '*' factor
  60          | termino '/' factor
  61          | factor

  62  factor : constante
  63         | identificador

  64  comparador : "<="
  65             | ">="
  66             | "!="
  67             | "=="

  68  tipo : FLOAT
  69       | INTEGER

  70  identificador : ID

  71  constante : CTE
  72            | '-' CTE

state 0
	$accept : . programa $end  (0)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	programa  goto 9
	bloquePrograma  goto 10
	sentenciaDeclarativa  goto 11
	sentenciaEjecutable  goto 12
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 1
	sentenciaDeclarativa : error . listaVariables ';'  (8)

	error  shift 19
	ID  shift 2
	.  error

	listaVariables  goto 20
	identificador  goto 21


state 2
	identificador : ID .  (70)

	.  reduce 70


state 3
	sentenciaEjecutable : IF . cuerpoIf END_IF  (31)
	sentenciaEjecutable : IF . error END_IF  (34)

	error  shift 22
	'('  shift 23
	.  error

	cuerpoIf  goto 24
	cuerpoCompleto  goto 25
	cuerpoIncompleto  goto 26


state 4
	sentenciaEjecutable : OUT . '(' CADENA ')' ';'  (28)
	sentenciaEjecutable : OUT . '(' error ')' ';'  (33)

	'('  shift 27
	.  error


state 5
	cicloFor : FOR . '(' condicionFor ')' '{' bloqueSentencia '}'  (35)
	cicloFor : FOR . '(' error ')' '{' bloqueSentencia '}'  (36)
	cicloFor : FOR . '(' condicionFor ')' '{' error '}'  (37)

	'('  shift 28
	.  error


state 6
	tipo : INTEGER .  (69)

	.  reduce 69


state 7
	tipo : FLOAT .  (68)

	.  reduce 68


state 8
	encabezadoProc : PROC . identificador '(' parametrosProc ')' NA '=' tipo ',' NS '=' tipo  (13)
	encabezadoProc : PROC . identificador '(' ')' NA '=' tipo ',' NS '=' tipo  (14)
	encabezadoProc : PROC . identificador '(' error ')' NA '=' tipo ',' NS '=' tipo  (15)

	ID  shift 2
	.  error

	identificador  goto 29


state 9
	$accept : programa . $end  (0)

	$end  accept


state 10
	programa : bloquePrograma .  (1)
	bloquePrograma : bloquePrograma . sentenciaDeclarativa  (2)
	bloquePrograma : bloquePrograma . sentenciaEjecutable  (3)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	$end  reduce 1

	sentenciaDeclarativa  goto 30
	sentenciaEjecutable  goto 31
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 11
	bloquePrograma : sentenciaDeclarativa .  (4)

	.  reduce 4


state 12
	bloquePrograma : sentenciaEjecutable .  (5)

	.  reduce 5


state 13
	sentenciaDeclarativa : tipo . listaVariables ';'  (6)

	error  shift 19
	ID  shift 2
	.  error

	listaVariables  goto 32
	identificador  goto 21


state 14
	sentenciaDeclarativa : declaracionProcedimiento .  (7)

	.  reduce 7


state 15
	sentenciaEjecutable : identificador . '(' parametrosProc ')' ';'  (29)
	sentenciaEjecutable : identificador . '(' ')' ';'  (30)
	asignacion : identificador . '=' expresion ';'  (55)

	'('  shift 33
	'='  shift 34
	.  error


state 16
	declaracionProcedimiento : encabezadoProc . bloqueProc  (12)

	'{'  shift 35
	.  error

	bloqueProc  goto 36


state 17
	sentenciaEjecutable : asignacion .  (27)

	.  reduce 27


state 18
	sentenciaEjecutable : cicloFor .  (32)

	.  reduce 32


state 19
	listaVariables : error .  (11)

	.  reduce 11


state 20
	sentenciaDeclarativa : error listaVariables . ';'  (8)
	listaVariables : listaVariables . ',' identificador  (9)

	';'  shift 37
	','  shift 38
	.  error


state 21
	listaVariables : identificador .  (10)

	.  reduce 10


state 22
	sentenciaEjecutable : IF error . END_IF  (34)

	END_IF  shift 39
	.  error


state 23
	cuerpoCompleto : '(' . condicion ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (49)
	cuerpoCompleto : '(' . error ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (50)
	cuerpoCompleto : '(' . condicion ')' '{' error '}' ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' . condicion ')' '{' bloqueSentencia '}'  (52)
	cuerpoIncompleto : '(' . error ')' '{' bloqueSentencia '}'  (53)
	cuerpoIncompleto : '(' . condicion ')' '{' error '}'  (54)

	error  shift 40
	ID  shift 2
	.  error

	identificador  goto 41
	condicion  goto 42


state 24
	sentenciaEjecutable : IF cuerpoIf . END_IF  (31)

	END_IF  shift 43
	.  error


state 25
	cuerpoIf : cuerpoCompleto .  (47)

	.  reduce 47


state 26
	cuerpoIf : cuerpoIncompleto .  (48)

	.  reduce 48


state 27
	sentenciaEjecutable : OUT '(' . CADENA ')' ';'  (28)
	sentenciaEjecutable : OUT '(' . error ')' ';'  (33)

	error  shift 44
	CADENA  shift 45
	.  error


state 28
	cicloFor : FOR '(' . condicionFor ')' '{' bloqueSentencia '}'  (35)
	cicloFor : FOR '(' . error ')' '{' bloqueSentencia '}'  (36)
	cicloFor : FOR '(' . condicionFor ')' '{' error '}'  (37)

	error  shift 46
	ID  shift 2
	.  error

	identificador  goto 47
	condicionFor  goto 48
	inicioFor  goto 49


state 29
	encabezadoProc : PROC identificador . '(' parametrosProc ')' NA '=' tipo ',' NS '=' tipo  (13)
	encabezadoProc : PROC identificador . '(' ')' NA '=' tipo ',' NS '=' tipo  (14)
	encabezadoProc : PROC identificador . '(' error ')' NA '=' tipo ',' NS '=' tipo  (15)

	'('  shift 50
	.  error


state 30
	bloquePrograma : bloquePrograma sentenciaDeclarativa .  (2)

	.  reduce 2


state 31
	bloquePrograma : bloquePrograma sentenciaEjecutable .  (3)

	.  reduce 3


state 32
	sentenciaDeclarativa : tipo listaVariables . ';'  (6)
	listaVariables : listaVariables . ',' identificador  (9)

	';'  shift 51
	','  shift 38
	.  error


state 33
	sentenciaEjecutable : identificador '(' . parametrosProc ')' ';'  (29)
	sentenciaEjecutable : identificador '(' . ')' ';'  (30)

	error  shift 52
	INTEGER  shift 6
	FLOAT  shift 7
	')'  shift 53
	.  error

	tipo  goto 54
	parametrosProc  goto 55
	parametro  goto 56


state 34
	asignacion : identificador '=' . expresion ';'  (55)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 59
	constante  goto 60
	expresion  goto 61
	termino  goto 62
	factor  goto 63


state 35
	bloqueProc : '{' . bloque '}'  (21)
	bloqueProc : '{' . error '}'  (22)

	error  shift 64
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	.  error

	sentenciaDeclarativa  goto 65
	sentenciaEjecutable  goto 66
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	bloque  goto 67
	asignacion  goto 17
	cicloFor  goto 18


state 36
	declaracionProcedimiento : encabezadoProc bloqueProc .  (12)

	.  reduce 12


state 37
	sentenciaDeclarativa : error listaVariables ';' .  (8)

	.  reduce 8


state 38
	listaVariables : listaVariables ',' . identificador  (9)

	ID  shift 2
	.  error

	identificador  goto 68


state 39
	sentenciaEjecutable : IF error END_IF .  (34)

	.  reduce 34


state 40
	cuerpoCompleto : '(' error . ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (50)
	cuerpoIncompleto : '(' error . ')' '{' bloqueSentencia '}'  (53)

	')'  shift 69
	.  error


state 41
	condicion : identificador . comparador asignacion  (40)
	condicion : identificador . comparador identificador  (41)
	condicion : identificador . comparador constante  (42)

	"<="  shift 70
	">="  shift 71
	"!="  shift 72
	"=="  shift 73
	.  error

	comparador  goto 74


state 42
	cuerpoCompleto : '(' condicion . ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (49)
	cuerpoCompleto : '(' condicion . ')' '{' error '}' ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' condicion . ')' '{' bloqueSentencia '}'  (52)
	cuerpoIncompleto : '(' condicion . ')' '{' error '}'  (54)

	')'  shift 75
	.  error


state 43
	sentenciaEjecutable : IF cuerpoIf END_IF .  (31)

	.  reduce 31


state 44
	sentenciaEjecutable : OUT '(' error . ')' ';'  (33)

	')'  shift 76
	.  error


state 45
	sentenciaEjecutable : OUT '(' CADENA . ')' ';'  (28)

	')'  shift 77
	.  error


state 46
	cicloFor : FOR '(' error . ')' '{' bloqueSentencia '}'  (36)

	')'  shift 78
	.  error


state 47
	inicioFor : identificador . '=' constante  (39)

	'='  shift 79
	.  error


state 48
	cicloFor : FOR '(' condicionFor . ')' '{' bloqueSentencia '}'  (35)
	cicloFor : FOR '(' condicionFor . ')' '{' error '}'  (37)

	')'  shift 80
	.  error


state 49
	condicionFor : inicioFor . ';' condicion ';' incDec  (38)

	';'  shift 81
	.  error


state 50
	encabezadoProc : PROC identificador '(' . parametrosProc ')' NA '=' tipo ',' NS '=' tipo  (13)
	encabezadoProc : PROC identificador '(' . ')' NA '=' tipo ',' NS '=' tipo  (14)
	encabezadoProc : PROC identificador '(' . error ')' NA '=' tipo ',' NS '=' tipo  (15)

	error  shift 82
	INTEGER  shift 6
	FLOAT  shift 7
	')'  shift 83
	.  error

	tipo  goto 54
	parametrosProc  goto 84
	parametro  goto 56


state 51
	sentenciaDeclarativa : tipo listaVariables ';' .  (6)

	.  reduce 6


state 52
	parametro : error . identificador  (20)

	ID  shift 2
	.  error

	identificador  goto 85


state 53
	sentenciaEjecutable : identificador '(' ')' . ';'  (30)

	';'  shift 86
	.  error


state 54
	parametro : tipo . identificador  (19)

	ID  shift 2
	.  error

	identificador  goto 87


state 55
	sentenciaEjecutable : identificador '(' parametrosProc . ')' ';'  (29)

	')'  shift 88
	.  error


state 56
	parametrosProc : parametro .  (16)
	parametrosProc : parametro . ',' parametro  (17)
	parametrosProc : parametro . ',' parametro ',' parametro  (18)

	','  shift 89
	')'  reduce 16


state 57
	constante : CTE .  (71)

	.  reduce 71


state 58
	constante : '-' . CTE  (72)

	CTE  shift 90
	.  error


state 59
	factor : identificador .  (63)

	.  reduce 63


state 60
	factor : constante .  (62)

	.  reduce 62


state 61
	asignacion : identificador '=' expresion . ';'  (55)
	expresion : expresion . '+' termino  (56)
	expresion : expresion . '-' termino  (57)

	'+'  shift 91
	'-'  shift 92
	';'  shift 93
	.  error


state 62
	expresion : termino .  (58)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 94
	'/'  shift 95
	'+'  reduce 58
	'-'  reduce 58
	';'  reduce 58


state 63
	termino : factor .  (61)

	.  reduce 61


state 64
	sentenciaDeclarativa : error . listaVariables ';'  (8)
	bloqueProc : '{' error . '}'  (22)

	error  shift 19
	ID  shift 2
	'}'  shift 96
	.  error

	listaVariables  goto 20
	identificador  goto 21


state 65
	bloque : sentenciaDeclarativa .  (25)

	.  reduce 25


state 66
	bloque : sentenciaEjecutable .  (26)

	.  reduce 26


state 67
	bloqueProc : '{' bloque . '}'  (21)
	bloque : bloque . sentenciaDeclarativa  (23)
	bloque : bloque . sentenciaEjecutable  (24)

	error  shift 1
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	INTEGER  shift 6
	FLOAT  shift 7
	PROC  shift 8
	'}'  shift 97
	.  error

	sentenciaDeclarativa  goto 98
	sentenciaEjecutable  goto 99
	tipo  goto 13
	declaracionProcedimiento  goto 14
	identificador  goto 15
	encabezadoProc  goto 16
	asignacion  goto 17
	cicloFor  goto 18


state 68
	listaVariables : listaVariables ',' identificador .  (9)

	.  reduce 9


state 69
	cuerpoCompleto : '(' error ')' . '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (50)
	cuerpoIncompleto : '(' error ')' . '{' bloqueSentencia '}'  (53)

	'{'  shift 100
	.  error


state 70
	comparador : "<=" .  (64)

	.  reduce 64


state 71
	comparador : ">=" .  (65)

	.  reduce 65


state 72
	comparador : "!=" .  (66)

	.  reduce 66


state 73
	comparador : "==" .  (67)

	.  reduce 67


state 74
	condicion : identificador comparador . asignacion  (40)
	condicion : identificador comparador . identificador  (41)
	condicion : identificador comparador . constante  (42)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 101
	asignacion  goto 102
	constante  goto 103


state 75
	cuerpoCompleto : '(' condicion ')' . '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (49)
	cuerpoCompleto : '(' condicion ')' . '{' error '}' ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' condicion ')' . '{' bloqueSentencia '}'  (52)
	cuerpoIncompleto : '(' condicion ')' . '{' error '}'  (54)

	'{'  shift 104
	.  error


state 76
	sentenciaEjecutable : OUT '(' error ')' . ';'  (33)

	';'  shift 105
	.  error


state 77
	sentenciaEjecutable : OUT '(' CADENA ')' . ';'  (28)

	';'  shift 106
	.  error


state 78
	cicloFor : FOR '(' error ')' . '{' bloqueSentencia '}'  (36)

	'{'  shift 107
	.  error


state 79
	inicioFor : identificador '=' . constante  (39)

	CTE  shift 57
	'-'  shift 58
	.  error

	constante  goto 108


state 80
	cicloFor : FOR '(' condicionFor ')' . '{' bloqueSentencia '}'  (35)
	cicloFor : FOR '(' condicionFor ')' . '{' error '}'  (37)

	'{'  shift 109
	.  error


state 81
	condicionFor : inicioFor ';' . condicion ';' incDec  (38)

	ID  shift 2
	.  error

	identificador  goto 41
	condicion  goto 110


state 82
	encabezadoProc : PROC identificador '(' error . ')' NA '=' tipo ',' NS '=' tipo  (15)
	parametro : error . identificador  (20)

	ID  shift 2
	')'  shift 111
	.  error

	identificador  goto 85


state 83
	encabezadoProc : PROC identificador '(' ')' . NA '=' tipo ',' NS '=' tipo  (14)

	NA  shift 112
	.  error


state 84
	encabezadoProc : PROC identificador '(' parametrosProc . ')' NA '=' tipo ',' NS '=' tipo  (13)

	')'  shift 113
	.  error


state 85
	parametro : error identificador .  (20)

	.  reduce 20


state 86
	sentenciaEjecutable : identificador '(' ')' ';' .  (30)

	.  reduce 30


state 87
	parametro : tipo identificador .  (19)

	.  reduce 19


state 88
	sentenciaEjecutable : identificador '(' parametrosProc ')' . ';'  (29)

	';'  shift 114
	.  error


state 89
	parametrosProc : parametro ',' . parametro  (17)
	parametrosProc : parametro ',' . parametro ',' parametro  (18)

	error  shift 52
	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 54
	parametro  goto 115


state 90
	constante : '-' CTE .  (72)

	.  reduce 72


state 91
	expresion : expresion '+' . termino  (56)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 59
	constante  goto 60
	termino  goto 116
	factor  goto 63


state 92
	expresion : expresion '-' . termino  (57)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 59
	constante  goto 60
	termino  goto 117
	factor  goto 63


state 93
	asignacion : identificador '=' expresion ';' .  (55)

	.  reduce 55


state 94
	termino : termino '*' . factor  (59)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 59
	constante  goto 60
	factor  goto 118


state 95
	termino : termino '/' . factor  (60)

	ID  shift 2
	CTE  shift 57
	'-'  shift 58
	.  error

	identificador  goto 59
	constante  goto 60
	factor  goto 119


state 96
	bloqueProc : '{' error '}' .  (22)

	.  reduce 22


state 97
	bloqueProc : '{' bloque '}' .  (21)

	.  reduce 21


state 98
	bloque : bloque sentenciaDeclarativa .  (23)

	.  reduce 23


state 99
	bloque : bloque sentenciaEjecutable .  (24)

	.  reduce 24


state 100
	cuerpoCompleto : '(' error ')' '{' . bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (50)
	cuerpoIncompleto : '(' error ')' '{' . bloqueSentencia '}'  (53)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 121


state 101
	condicion : identificador comparador identificador .  (41)
	asignacion : identificador . '=' expresion ';'  (55)

	'='  shift 34
	';'  reduce 41
	')'  reduce 41


state 102
	condicion : identificador comparador asignacion .  (40)

	.  reduce 40


state 103
	condicion : identificador comparador constante .  (42)

	.  reduce 42


state 104
	cuerpoCompleto : '(' condicion ')' '{' . bloqueSentencia '}' ELSE '{' bloqueSentencia '}'  (49)
	cuerpoCompleto : '(' condicion ')' '{' . error '}' ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' condicion ')' '{' . bloqueSentencia '}'  (52)
	cuerpoIncompleto : '(' condicion ')' '{' . error '}'  (54)

	error  shift 122
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 123


state 105
	sentenciaEjecutable : OUT '(' error ')' ';' .  (33)

	.  reduce 33


state 106
	sentenciaEjecutable : OUT '(' CADENA ')' ';' .  (28)

	.  reduce 28


state 107
	cicloFor : FOR '(' error ')' '{' . bloqueSentencia '}'  (36)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 124


state 108
	inicioFor : identificador '=' constante .  (39)

	.  reduce 39


state 109
	cicloFor : FOR '(' condicionFor ')' '{' . bloqueSentencia '}'  (35)
	cicloFor : FOR '(' condicionFor ')' '{' . error '}'  (37)

	error  shift 125
	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 126


state 110
	condicionFor : inicioFor ';' condicion . ';' incDec  (38)

	';'  shift 127
	.  error


state 111
	encabezadoProc : PROC identificador '(' error ')' . NA '=' tipo ',' NS '=' tipo  (15)

	NA  shift 128
	.  error


state 112
	encabezadoProc : PROC identificador '(' ')' NA . '=' tipo ',' NS '=' tipo  (14)

	'='  shift 129
	.  error


state 113
	encabezadoProc : PROC identificador '(' parametrosProc ')' . NA '=' tipo ',' NS '=' tipo  (13)

	NA  shift 130
	.  error


state 114
	sentenciaEjecutable : identificador '(' parametrosProc ')' ';' .  (29)

	.  reduce 29


state 115
	parametrosProc : parametro ',' parametro .  (17)
	parametrosProc : parametro ',' parametro . ',' parametro  (18)

	','  shift 131
	')'  reduce 17


state 116
	expresion : expresion '+' termino .  (56)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 94
	'/'  shift 95
	'+'  reduce 56
	'-'  reduce 56
	';'  reduce 56


state 117
	expresion : expresion '-' termino .  (57)
	termino : termino . '*' factor  (59)
	termino : termino . '/' factor  (60)

	'*'  shift 94
	'/'  shift 95
	'+'  reduce 57
	'-'  reduce 57
	';'  reduce 57


state 118
	termino : termino '*' factor .  (59)

	.  reduce 59


state 119
	termino : termino '/' factor .  (60)

	.  reduce 60


state 120
	bloqueSentencia : sentenciaEjecutable .  (46)

	.  reduce 46


state 121
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia . '}' ELSE '{' bloqueSentencia '}'  (50)
	cuerpoIncompleto : '(' error ')' '{' bloqueSentencia . '}'  (53)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 132
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 122
	cuerpoCompleto : '(' condicion ')' '{' error . '}' ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' condicion ')' '{' error . '}'  (54)

	'}'  shift 134
	.  error


state 123
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia . '}' ELSE '{' bloqueSentencia '}'  (49)
	cuerpoIncompleto : '(' condicion ')' '{' bloqueSentencia . '}'  (52)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 135
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 124
	cicloFor : FOR '(' error ')' '{' bloqueSentencia . '}'  (36)
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 136
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 125
	cicloFor : FOR '(' condicionFor ')' '{' error . '}'  (37)

	'}'  shift 137
	.  error


state 126
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia . '}'  (35)
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 138
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 127
	condicionFor : inicioFor ';' condicion ';' . incDec  (38)

	UP  shift 139
	DOWN  shift 140
	.  error

	incDec  goto 141


state 128
	encabezadoProc : PROC identificador '(' error ')' NA . '=' tipo ',' NS '=' tipo  (15)

	'='  shift 142
	.  error


state 129
	encabezadoProc : PROC identificador '(' ')' NA '=' . tipo ',' NS '=' tipo  (14)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 143


state 130
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA . '=' tipo ',' NS '=' tipo  (13)

	'='  shift 144
	.  error


state 131
	parametrosProc : parametro ',' parametro ',' . parametro  (18)

	error  shift 52
	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 54
	parametro  goto 145


state 132
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia '}' . ELSE '{' bloqueSentencia '}'  (50)
	cuerpoIncompleto : '(' error ')' '{' bloqueSentencia '}' .  (53)

	ELSE  shift 146
	END_IF  reduce 53


state 133
	bloqueSentencia : bloqueSentencia sentenciaEjecutable .  (45)

	.  reduce 45


state 134
	cuerpoCompleto : '(' condicion ')' '{' error '}' . ELSE '{' bloqueSentencia '}'  (51)
	cuerpoIncompleto : '(' condicion ')' '{' error '}' .  (54)

	ELSE  shift 147
	END_IF  reduce 54


state 135
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' . ELSE '{' bloqueSentencia '}'  (49)
	cuerpoIncompleto : '(' condicion ')' '{' bloqueSentencia '}' .  (52)

	ELSE  shift 148
	END_IF  reduce 52


state 136
	cicloFor : FOR '(' error ')' '{' bloqueSentencia '}' .  (36)

	.  reduce 36


state 137
	cicloFor : FOR '(' condicionFor ')' '{' error '}' .  (37)

	.  reduce 37


state 138
	cicloFor : FOR '(' condicionFor ')' '{' bloqueSentencia '}' .  (35)

	.  reduce 35


state 139
	incDec : UP . constante  (43)

	CTE  shift 57
	'-'  shift 58
	.  error

	constante  goto 149


state 140
	incDec : DOWN . constante  (44)

	CTE  shift 57
	'-'  shift 58
	.  error

	constante  goto 150


state 141
	condicionFor : inicioFor ';' condicion ';' incDec .  (38)

	.  reduce 38


state 142
	encabezadoProc : PROC identificador '(' error ')' NA '=' . tipo ',' NS '=' tipo  (15)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 151


state 143
	encabezadoProc : PROC identificador '(' ')' NA '=' tipo . ',' NS '=' tipo  (14)

	','  shift 152
	.  error


state 144
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' . tipo ',' NS '=' tipo  (13)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 153


state 145
	parametrosProc : parametro ',' parametro ',' parametro .  (18)

	.  reduce 18


state 146
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia '}' ELSE . '{' bloqueSentencia '}'  (50)

	'{'  shift 154
	.  error


state 147
	cuerpoCompleto : '(' condicion ')' '{' error '}' ELSE . '{' bloqueSentencia '}'  (51)

	'{'  shift 155
	.  error


state 148
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' ELSE . '{' bloqueSentencia '}'  (49)

	'{'  shift 156
	.  error


state 149
	incDec : UP constante .  (43)

	.  reduce 43


state 150
	incDec : DOWN constante .  (44)

	.  reduce 44


state 151
	encabezadoProc : PROC identificador '(' error ')' NA '=' tipo . ',' NS '=' tipo  (15)

	','  shift 157
	.  error


state 152
	encabezadoProc : PROC identificador '(' ')' NA '=' tipo ',' . NS '=' tipo  (14)

	NS  shift 158
	.  error


state 153
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo . ',' NS '=' tipo  (13)

	','  shift 159
	.  error


state 154
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia '}' ELSE '{' . bloqueSentencia '}'  (50)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 160


state 155
	cuerpoCompleto : '(' condicion ')' '{' error '}' ELSE '{' . bloqueSentencia '}'  (51)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 161


state 156
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' ELSE '{' . bloqueSentencia '}'  (49)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	.  error

	sentenciaEjecutable  goto 120
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18
	bloqueSentencia  goto 162


state 157
	encabezadoProc : PROC identificador '(' error ')' NA '=' tipo ',' . NS '=' tipo  (15)

	NS  shift 163
	.  error


state 158
	encabezadoProc : PROC identificador '(' ')' NA '=' tipo ',' NS . '=' tipo  (14)

	'='  shift 164
	.  error


state 159
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo ',' . NS '=' tipo  (13)

	NS  shift 165
	.  error


state 160
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia . '}'  (50)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 166
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 161
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)
	cuerpoCompleto : '(' condicion ')' '{' error '}' ELSE '{' bloqueSentencia . '}'  (51)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 167
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 162
	bloqueSentencia : bloqueSentencia . sentenciaEjecutable  (45)
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia . '}'  (49)

	ID  shift 2
	IF  shift 3
	OUT  shift 4
	FOR  shift 5
	'}'  shift 168
	.  error

	sentenciaEjecutable  goto 133
	identificador  goto 15
	asignacion  goto 17
	cicloFor  goto 18


state 163
	encabezadoProc : PROC identificador '(' error ')' NA '=' tipo ',' NS . '=' tipo  (15)

	'='  shift 169
	.  error


state 164
	encabezadoProc : PROC identificador '(' ')' NA '=' tipo ',' NS '=' . tipo  (14)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 170


state 165
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo ',' NS . '=' tipo  (13)

	'='  shift 171
	.  error


state 166
	cuerpoCompleto : '(' error ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}' .  (50)

	.  reduce 50


state 167
	cuerpoCompleto : '(' condicion ')' '{' error '}' ELSE '{' bloqueSentencia '}' .  (51)

	.  reduce 51


state 168
	cuerpoCompleto : '(' condicion ')' '{' bloqueSentencia '}' ELSE '{' bloqueSentencia '}' .  (49)

	.  reduce 49


state 169
	encabezadoProc : PROC identificador '(' error ')' NA '=' tipo ',' NS '=' . tipo  (15)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 172


state 170
	encabezadoProc : PROC identificador '(' ')' NA '=' tipo ',' NS '=' tipo .  (14)

	.  reduce 14


state 171
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo ',' NS '=' . tipo  (13)

	INTEGER  shift 6
	FLOAT  shift 7
	.  error

	tipo  goto 173


state 172
	encabezadoProc : PROC identificador '(' error ')' NA '=' tipo ',' NS '=' tipo .  (15)

	.  reduce 15


state 173
	encabezadoProc : PROC identificador '(' parametrosProc ')' NA '=' tipo ',' NS '=' tipo .  (13)

	.  reduce 13


35 terminals, 29 nonterminals
73 grammar rules, 174 states
